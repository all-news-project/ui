{"version":3,"sources":["components/clusters.js","components/cluster_details.js","components/db_stats.js","components/websites.js","components/header.js","services/services.js","App.js","reportWebVitals.js","index.js"],"names":["Clusters","_ref","nodes","edges","setCurrentClusterIndex","graph","React","createElement","className","Graph","options","layout","hierarchical","color","height","events","select","event","getNetwork","network","on","properties","ids","console","log","ClusterDetails","cluster","articles_list","articles","map","article","title","href","url","target","src","icon_url","trend","creation_time","DBStats","data","Object","entries","_ref2","_ref3","_slicedToArray","key","value","Websites","labels","values","XYPlot","width","XAxis","tickFormat","v","i","tickValues","_toConsumableArray","Array","length","keys","el","index","array","tickTotal","tickLabelAngle","tickSize","marginTop","style","text","stroke","fill","fontSize","fontWeight","YAxis","VerticalRectSeries","raw","transformed","x0","columnWidth","x","unshift","y","push","transformDataToRectSeries","Header","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","SERVER","getClusters","_asyncToGenerator","_callee","response","_context","fetch","json","t0","apply","arguments","getWebsitesStats","_callee2","_context2","getDBStats","_callee3","_context3","App","getClusterRequest","useMemo","graphData","_useState","useState","_useState2","setGraphData","useEffect","warn","fetchData","_useState3","_useState4","currentClusterIndex","getWebsitesStatsRequest","websitesData","_useState5","_useState6","setWebsitesData","_ref4","_callee4","_context4","getDBStatsRequest","_callee5","dbData","_context5","_useState7","_useState8","setDbData","_ref6","_callee6","_context6","clusters","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3d2c500b.chunk.js","sourcesContent":["import React from \"react\";\nimport Graph from \"react-graph-vis\";\n\nconst Clusters = ({ nodes, edges, setCurrentClusterIndex }) => {\n  const graph = {\n    nodes: nodes,\n    edges: edges,\n  };\n\n  // Options\n  const options = {\n    layout: {\n      hierarchical: false,\n    },\n    edges: {\n      color: \"#000000\",\n    },\n    height: \"600px\",\n  };\n\n  // Events\n  const events = {\n    select: function(event) {\n      var { nodes, edges } = event;\n    },\n  };\n\n  return (\n    <section className=\"card\">\n      <h3>Clusters</h3>\n      <Graph\n        graph={graph}\n        options={options}\n        events={events}\n        getNetwork={(network) => {\n          network.on(\"click\", function(properties) {\n            var ids = properties.nodes;\n            setCurrentClusterIndex(ids);\n            console.log(ids);\n          });\n        }}\n      />\n    </section>\n  );\n};\n\nexport default Clusters;\n","import React from \"react\";\n\nconst ClusterDetails = ({ cluster }) => {\n  let articles_list = \"No Articles\";\n  const DEFAULT_ICON_URL =\n    \"https://cdn-icons-png.flaticon.com/128/2807/2807258.png\";\n  if (cluster && cluster.articles) {\n    articles_list = cluster.articles.map((article) => (\n      <li className=\"article_details\">\n        <h4>{article.title ? article.title : \"No title\"}</h4>\n        <a href={article.url} target=\"_blank\">\n          <img\n            src={article.icon_url ? article.icon_url : DEFAULT_ICON_URL}\n          ></img>\n        </a>\n      </li>\n    ));\n  }\n\n  return (\n    <section className=\"card cluster_details\">\n      <h3>Cluster details</h3>\n      {cluster ? (\n        <div>\n          <p>\n            <b>Topic:</b> {cluster.trend ? cluster.trend : \"No topic\"}\n          </p>\n          <p>\n            <b>Created time:</b>{\" \"}\n            {cluster.creation_time ? cluster.creation_time : \"No creation time\"}\n          </p>\n          <details>\n            <summary>Articles</summary>\n            <ul>{articles_list}</ul>\n          </details>\n        </div>\n      ) : (\n        \"Click on cluster to see details\"\n      )}\n    </section>\n  );\n};\n\nexport default ClusterDetails;\n","import React from \"react\";\n\nconst DBStats = ({ data }) => {\n  console.log(\"data: \", data);\n  return (\n    <section className=\"card\">\n      <h3>DB Stats</h3>\n      <div className=\"db_stats_text\">\n        {Object.entries(data).map(([key, value]) => (\n          <div>\n            <label>{key}: </label>\n            <span>{value}</span>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default DBStats;\n","import React from \"react\";\nimport { XYPlot, XAxis, YAxis, VerticalRectSeries } from \"react-vis\";\n\nconst Websites = ({ labels, values }) => {\n  const columnWidth = 0.6;\n\n  const transformDataToRectSeries = (raw) => {\n    const transformed = raw.map((el, i) => {\n      el.x0 = i + 1 - columnWidth / 2;\n      el.x = i + 1 + columnWidth / 2;\n      return el;\n    });\n    transformed.unshift({ x: 0.5, y: 0 }); // fake data point, enables margin between y-axis and first column\n    transformed.push({ x: 3.5, y: 0 }); // fake data point, enables margin between last column and chart end\n    return transformed;\n  };\n  const increment = (el, index, array) => {\n    return el + 1;\n  };\n\n  return (\n    <section className=\"card\">\n      <h3>Websites</h3>\n      <h4>amount of collected article in specific domain</h4>\n      <XYPlot width={800} height={300}>\n        <XAxis\n          tickFormat={(v, i) => labels[i]}\n          tickValues={[...Array(labels.length).keys()].map(increment)}\n          tickTotal={1}\n          tickLabelAngle={30}\n          tickSize={1}\n          marginTop={40}\n          style={{\n            text: {\n              stroke: \"none\",\n              fill: \"#000000\",\n              fontSize: 14,\n              fontWeight: 400,\n            },\n          }}\n        />\n        <YAxis />\n        <VerticalRectSeries data={transformDataToRectSeries(values)} />\n      </XYPlot>\n    </section>\n  );\n};\n\nexport default Websites;\n","import React from \"react\";\n\nconst Header = () => {\n  const logoUrl =\n    \"https://raw.githubusercontent.com/all-news-project/ui/main/public/logo192.png\";\n  const gitHubLogoUrl =\n    \"https://global-uploads.webflow.com/6320e912264435aca2ab0351/6441979ed961547ccbe96b29_github-white.svg\";\n  const gitHubLink = \"https://github.com/all-news-project\";\n  const googleExtensionLogoUrl =\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Google_Chrome_Web_Store_icon_2015.svg/512px-Google_Chrome_Web_Store_icon_2015.svg.png?20220227092509\";\n  const googleExtensionLink =\n    \"https://github.com/all-news-project/extension/wiki/Installation\";\n  return (\n    <header>\n      <label className=\"logo\">\n        <img src={logoUrl}></img>\n      </label>\n      <div>\n        <span className=\"header_icon\">\n          <a href={googleExtensionLink} target=\"_blank\">\n            <img src={googleExtensionLogoUrl}></img>\n          </a>\n        </span>\n        <span className=\"header_icon\">\n          <a href={gitHubLink} target=\"_blank\">\n            <img src={gitHubLogoUrl}></img>\n          </a>\n        </span>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","const SERVER = \"https://all-news-api.onrender.com\";\n\nexport const getClusters = async () => {\n  try {\n    const response = await fetch(SERVER + \"/get_clusters_for_ui\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching cluster data:\", error);\n    throw error;\n  }\n};\n\nexport const getWebsitesStats = async () => {\n  try {\n    const response = await fetch(SERVER + \"/get_websites_stats\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching websites statistics data:\", error);\n    throw error;\n  }\n};\n\nexport const getDBStats = async () => {\n  try {\n    const response = await fetch(SERVER + \"/get_db_stats\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching db statistics data:\", error);\n    throw error;\n  }\n};\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport \"./App.css\";\nimport Clusters from \"./components/clusters\";\nimport ClusterDetails from \"./components/cluster_details\";\nimport DBStats from \"./components/db_stats\";\nimport Websites from \"./components/websites\";\nimport Header from \"./components/header\";\nimport { getClusters, getWebsitesStats, getDBStats } from \"./services/services\";\n\nfunction App() {\n  // Cluster Data\n  const getClusterRequest = useMemo(\n    () => async () => {\n      const graphData = await getClusters();\n      return graphData;\n    },\n    []\n  );\n\n  const [graphData, setGraphData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getClusterRequest();\n      console.warn(data);\n      setGraphData({ data });\n    };\n\n    fetchData();\n  }, [getClusterRequest]);\n\n  // Current cluster index\n  const [currentClusterIndex, setCurrentClusterIndex] = useState(0);\n\n  // Websites statistic data\n  const getWebsitesStatsRequest = useMemo(\n    () => async () => {\n      const websitesData = await getWebsitesStats();\n      return websitesData;\n    },\n    []\n  );\n\n  const [websitesData, setWebsitesData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getWebsitesStatsRequest();\n      setWebsitesData({ data });\n    };\n\n    fetchData();\n  }, [getWebsitesStatsRequest]);\n\n  // DB statistic data\n  const getDBStatsRequest = useMemo(\n    () => async () => {\n      const dbData = await getDBStats();\n      return dbData;\n    },\n    []\n  );\n\n  const [dbData, setDbData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getDBStatsRequest();\n      setDbData({ data });\n    };\n\n    fetchData();\n  }, [getDBStatsRequest]);\n\n  // Render\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"dashboard\">\n        <Clusters\n          nodes={graphData.data ? graphData.data.nodes : []}\n          edges={graphData.data ? graphData.data.edges : []}\n          setCurrentClusterIndex={setCurrentClusterIndex}\n        />\n        <div className=\"dash_component\">\n          <div className=\"details_component\">\n            <ClusterDetails\n              cluster={\n                graphData.data\n                  ? graphData.data.clusters[currentClusterIndex]\n                  : {}\n              }\n            />\n            <DBStats data={dbData.data ? dbData.data.data : {}} />\n          </div>\n          <Websites\n            labels={websitesData.data ? websitesData.data.labels : []}\n            values={websitesData.data ? websitesData.data.values : []}\n          />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}